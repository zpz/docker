# Dockerfile for image 'zppz/jdk:20170520'
# Generated by 'build.sh'.
#
# DO NOT EDIT.

FROM openjdk:8-jdk
USER root

USER root

#------------------
# group and user

RUN groupadd --gid 1000 docker \
    && mkdir -p /home/docker-user \
    && useradd --uid 1000 --gid docker --no-user-group --home /home/docker-user --shell /bin/bash docker-user \
    && chown -R docker-user:docker /home/docker-user \
    && chmod -R u=rwx,g=rwx,o=r /home/docker-user

# Giving 'g=rwx' to /home/docker-user is a hack around mapped-volume permission issues.

# If root privilage is needed, install `sudo`, and add
# RUN bash -c "echo -e '1234\1234' | passwd docker-user" \
#   && adduser docker-user admin


#-----------
# Very basic

# 'curl': about 15 MB.
# 'vim': about 20MB.

RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        bzip2 \
        curl \
        less \
        tree \
        unzip \
        vim \
        xz-utils \
    \
    && curl -skL https://github.com/zpz/linux/archive/master.tar.gz |tar xz -C /tmp/ \
    && mv /tmp/linux-master /tmp/dotfiles \
    && cp /tmp/dotfiles/bash/bashrc /etc/bash.bashrc \
    && chmod +r /etc/bash.bashrc \
    && mkdir -p /etc/vim \
    && cp /tmp/dotfiles/vim/vimrc /etc/vim/vimrc.local \
    && cp -r /tmp/dotfiles/vim/vim/* /etc/vim/ \
    && chmod -R +rX /etc/vim \
    \
    && rm -rf /var/lib/apt/lists/* /tmp/* \
    && apt-get -y autoremove \
    && apt-get clean

ENV SHELL=/bin/bash
ENV EDITOR vim


#------------------
# entrypoint

ENV TINI_VERSION v0.14.0
ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /usr/bin/tini
RUN chmod +x /usr/bin/tini

ENTRYPOINT ["/usr/bin/tini", "--"]
# TODO: problematic when I terminate some programs within container.

CMD ["/bin/bash"]
WORKDIR /

# 11 Mb
ENV MAVEN_VERSION 3.5.0
ENV MAVEN_HOME /usr/share/maven
ARG MAVEN_BASE_URL=http://www-eu.apache.org/dist/maven/maven-3/${MAVEN_VERSION}/binaries
RUN mkdir -p ${MAVEN_HOME} \
    && curl -skL --retry 3 ${MAVEN_BASE_URL}/apache-maven-${MAVEN_VERSION}-bin.tar.gz \
        | tar xz -C ${MAVEN_HOME}
ENV PATH ${PATH}:${MAVEN_HOME}/apache-maven-${MAVEN_VERSION}/bin

# 80 Mb
ENV GRADLE_VERSION 3.5
ENV GRADLE_HOME /usr/share/gradle
ARG GRADLE_BASE_URL=https://services.gradle.org/distributions
RUN mkdir -p ${GRADLE_HOME} \
    && curl -skL --retry 3 ${GRADLE_BASE_URL}/gradle-${GRADLE_VERSION}-bin.zip \
        -o ${GRADLE_HOME}/gradle.zip \
    && (cd ${GRADLE_HOME}; unzip gradle.zip; rm -f gradle.zip)
ENV GRADLE_HOME ${GRADLE_HOME}/gradle-${GRADLE_VERSION}
ENV PATH ${PATH}:${GRADLE_HOME}/bin

# 21 Mb
ENV SCALA_VERSION 2.12.2
ENV SCALA_HOME /usr/share/scala
ARG SCALA_BASE_URL=https://downloads.lightbend.com/scala/${SCALA_VERSION}
RUN mkdir -p ${SCALA_HOME} \
    && curl -skL --retry 3 ${SCALA_BASE_URL}/scala-${SCALA_VERSION}.tgz \
        | tar xz -C ${SCALA_HOME}
ENV SCALA_HOME ${SCALA_HOME}/scala-${SCALA_VERSION}
ENV PATH ${PATH}:${SCALA_HOME}/bin


ENV KOTLIN_VERSION 1.1.2-2
ENV KOTLIN_HOME /usr/share/kotlin
ARG KOTLIN_BASE_URL=https://github.com/JetBrains/kotlin/releases/download/v${KOTLIN_VERSION}
RUN mkdir -p ${KOTLIN_HOME} \
    && curl -skL --retry 3 ${KOTLIN_BASE_URL}/kotlin-compiler-${KOTLIN_VERSION}.zip \
        -o ${KOTLIN_HOME}/kotlin.zip \
    && (cd ${KOTLIN_HOME}; unzip kotlin.zip; rm -f kotlin.zip)
ENV KOTLIN_HOME ${KOTLIN_HOME}/kotlinc
ENV PATH ${PATH}:${KOTLIN_HOME}/bin


ENV GROOVY_VERSION 2.4.10
ENV GROOVY_HOME /usr/share/groovy
ARG GROOVY_BASE_URL=https://bintray.com/artifact/download/groovy/maven
RUN mkdir -p ${GROOVY_HOME} \
    && curl -skL --retry 3 ${GROOVY_BASE_URL}/apache-groovy-binary-${GROOVY_VERSION}.zip \
        -o ${GROOVY_HOME}/groovy.zip \
    && (cd ${GROOVY_HOME}; unzip groovy.zip; rm -f groovy.zip)
ENV GROOVY_HOME ${GROOVY_HOME}/groovy-${GROOVY_VERSION}
ENV PATH ${PATH}:${GROOVY_HOME}/bin

thisfile="${BASH_SOURCE[0]}"
thisdir="$( cd "$( dirname "${thisfile}" )" && pwd )"
parentdir="$(dirname "$thisdir")"
dockerdir="$parentdir"
version="$(cat "$dockerdir"/version)"

TAG=$version
PARENT="py3:"$TAG
NAME=$(basename "$thisdir"):"$TAG"

echo
echo ==============================================
echo creating Dockerfile for $NAME...
cat > "$thisdir"/Dockerfile <<EOF
#==========================================================
# Generated by 'build.sh'.
#
# DO NOT EDIT.
#==========================================================

FROM ${PARENT}
EOF

cat >> "$thisdir"/Dockerfile <<'EOF'

USER root


#------------------
# development tools

RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        git \
        vim \
    && cd /tmp \
    && curl -sL https://github.com/zpz/linux/archive/master.tar.gz -o - |tar xz \
    && cd linux-master \
    && mkdir -p /etc/vim \
    && cp -f vim/vimrc /etc/vim/vimrc.local \
    && cp -r vim/vim/* /etc/vim/ \
    && cp git/gitconfig /etc/gitconfig \
    && chmod -R +rX /etc/vim \
    && chmod +r /etc/gitconfig

ENV EDITOR vim

RUN pip install --no-cache-dir --upgrade \
        'ipdb==0.10.0' \
        'ipython==4.2.0' \
        'pylint==1.5.5' \
        'pytest-cov==2.2.1' \
        'pudb==2016.1' \
        'yapf==0.7.1' \
    \
    && apt-get update \
    && apt-get install -y --no-install-recommends \
        build-essential \
        pkg-config \
    && pip install --no-cache-dir --upgrade \
        'line_profiler==1.0' \
    && apt-get purge -y --auto-remove \
        build-essential \
        pkg-config \
    && rm -rf /var/lib/apt/lists/* /tmp/* \
    && apt-get -y autoremove \
    && apt-get clean

USER ${USER}
WORKDIR ${HOME}
EOF


echo
echo building image "$NAME"...
echo
docker build -t "$NAME" "$thisdir"


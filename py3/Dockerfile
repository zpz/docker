# Dockerfile for image 'zppz/py3:20160607'

#==================================
# Generated by 'build.sh'.
#
# DO NOT EDIT.
#==================================

FROM python:3.5.1-slim

USER root


#------------------
# group and user

ENV GROUP=docker-users
ENV USER=docker-user
ENV HOME=/home/${USER}

RUN groupadd --gid 1000 ${GROUP} \
    && mkdir -p ${HOME} \
    && useradd --uid 1000 --gid ${GROUP} --no-user-group --home ${HOME} --shell /bin/bash ${USER} \
    && chown -R ${USER}:${GROUP} ${HOME}


#------------------
# System and basic

# 'curl': about 15 MB.
# 'locales': about 16MB.

RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        curl \
        less \
        locales \
    \
    && echo 'en_US.UTF-8 UTF-8' >> /etc/locale.gen \
    && locale-gen en_US.UTF-8 \
    && /usr/sbin/update-locale LANG=en_US.UTF-8 \
    \
    && rm -rf /var/lib/apt/lists/* /tmp/* \
    && apt-get -y autoremove \
    && apt-get clean

# Locale
#   default is C.UTF-8

ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8

# bash customization
#
ENV SHELL=/bin/bash
COPY ./dotfiles/bash/bashrc /etc/bash.bashrc
RUN chmod +r /etc/bash.bashrc


#------------------
# Python

# offical Python image gets the link 'python-config' wrong.
RUN ln -s -f /usr/local/bin/python3-config /usr/local/bin/python-config

RUN pip install --no-cache-dir --upgrade \
        'pip==8.1.2' \
        'setuptools==22.0.0' \
        'wheel==0.29.0' \
    && pip install --no-cache-dir --upgrade \
        'pytest==2.9.2' \
        'requests==2.10.0' \
        'sh==1.11' \
        'six==1.10.0' \
    && ln -s /usr/local/bin/py.test /usr/local/bin/pytest


#------------------
# Development tools

RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        vim \
    && rm -rf /var/lib/apt/lists/* /tmp/* \
    && apt-get -y autoremove \
    && apt-get clean

COPY ./dotfiles/vim/vimrc /etc/vim/vimrc.local
COPY ./dotfiles/vim/vim/ /etc/vim/
RUN chmod -R +rX /etc/vim

ENV EDITOR vim

# graphviz is required by Sphinx to generate class hierarchy diagrams.
# 'make' is required to use Sphinx as in 'make html'.

RUN pip install --no-cache-dir --upgrade \
        'ipdb==0.10.0' \
        'ipython==4.2.0' \
        'pylint==1.5.5' \
        'pytest-cov==2.2.1' \
        'pudb==2016.1' \
        'Sphinx==1.4.2' \
        'sphinx_rtd_theme==0.1.9' \
        'yapf==0.9.0' \
    \
    && apt-get update \
    && apt-get install -y --no-install-recommends \
        make \
        build-essential \
        graphviz \
        pkg-config \
    && pip install --no-cache-dir --upgrade \
        'line_profiler==1.0' \
        'notebook==4.2.0' \
    && apt-get purge -y --auto-remove \
        build-essential \
        pkg-config \
    && rm -rf /var/lib/apt/lists/* /tmp/* \
    && apt-get -y autoremove \
    && apt-get clean

# notebook will install ipython, pyzmq, tornado, jinja2 and some other things.

ENV NOTEBOOKPORT 8888
EXPOSE $NOTEBOOKPORT

RUN echo '#!/usr/bin/env bash' > /usr/local/bin/notebook \
    && echo >> /usr/local/bin/notebook \
    && echo 'jupyter notebook --port=$NOTEBOOKPORT --no-browser --ip=0.0.0.0' >> /usr/local/bin/notebook \
    && chmod +x /usr/local/bin/notebook


#------------------
# entrypoint

ENV TINI_VERSION v0.9.0
ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /usr/bin/tini
RUN chmod +x /usr/bin/tini

ENTRYPOINT ["/usr/bin/tini", "--"]
# TODO: problematic when I terminate some programs within container.


#---------------
# startup

USER ${USER}
WORKDIR ${HOME}

CMD ["python"]

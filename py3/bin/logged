#!/bin/bash

set -o errexit
set -o nounset
set -o pipefail

USAGE=$(cat <<'EOF'
Usage:
    logged [-s] command [args]

By default, all printouts and logging will appear in terminal,
as well as being saved in log files.
If `-s` is specified, then terminal printout is suppressed.

`args` are arguments to be passed on to `command`.

Example:

    logged python path/to/script/myscript.py [args]

In this case, log is saved into "${LOGDIR}/myscript.py-logs/".

Example:

    logged bash path/to/script/myscript.sh [args]

In this case, log is saved into "${LOGDIR}/myscript.sh-logs/".

In other cases, log is saved into "${LOGDIR}/".
EOF
)

if [[ $# < 1 ]]; then
    >&2 echo "${USAGE}"
    exit 1
fi

silent="no"
if [[ "$1" == "-s" ]]; then
    silent="yes"
    shift
fi
if [[ $# < 1 ]]; then
    echo "${USAGE}"
    exit 1
fi

: "${LOGDIR:?Environment variable \'LOGDIR\' is not set}"
: "${DATADIR:?Environment variable \'DATADIR\' is not set}"

cmd="$1"
shift
args="$@"
opts=''
logdir="${LOGDIR}"


if [[ "${cmd}" == python ]]; then
    opts='-u'
    if [[ $# < 1 ]]; then
        >&2 echo "Python script not specified"
        exit 1
    fi
    if [[ "$1" == *.py ]]; then
        script=$(basename "$1")
    elif [[ "$1" == -m ]] && [[ $# > 1 ]]; then
        script="$2"
    else
        >&2 echo "Python script not specified"
        exit 1
    fi
    logdir="${LOGDIR}/${script}-logs"
elif [[ "${cmd}" == bash ]]; then
    if [[ $# < 1 ]] || [[ "$1" != *.sh ]]; then
        >&2 echo "Bash script not specified"
        exit 1
    fi
    script=$(basename "$1")
    logdir="${LOGDIR}/${script}-logs"
fi

# About logging, please refer to
#  http://coyote.github.io/log-rotation-of-stdout/

function mlog {
    if [[ "${silent}" == yes ]]; then
        multilog s1000000 n30 "${logdir}"
    else
        tee >(multilog s1000000 n30 "${logdir}")
    fi
}



echo | mlog
echo | mlog
echo "========================================" | mlog
# date --utc +'%Y-%m-%d %H:%M:%S UTC' | mlog
TZ=US/Pacific dae +'%Y-%m-%d %H:%M:%S US/Pacific' 2>&1 | mlog
echo starting task \`${cmd} ${args}\` 2>&1 | mlog
echo "----------------------------------------" | mlog
echo | mlog

${cmd} ${opts} ${args} 2>&1 | mlog

echo | mlog
echo "----------------------------------------" | mlog
# date --utc +'%Y-%m-%d %H:%M:%S UTC' | mlog
TZ=US/Pacific dae +'%Y-%m-%d %H:%M:%S US/Pacific' 2>&1 | mlog
echo task \`${cmd} ${args}\` finished 2>&1 | mlog
echo "========================================" | mlog


set -o nounset
set -o pipefail

thisfile="${BASH_SOURCE[0]}"
thisdir=$( cd "$( dirname "${thisfile}" )" && pwd )
parentdir=$(dirname "${thisdir}")
parent_name=$(cat "${parentdir}"/name)
parent_version=$(cat "${parentdir}"/version)
PARENT="${parent_name}":"${parent_version}"

version=$(cat "${thisdir}"/version)
if [[ "${version}" < "${parent_version}" ]]; then
    echo "${parent_version}" > "${thisdir}"/version
    version=${parent_version}
fi
NAME="$(cat "${thisdir}/name"):${version}"

echo
echo =====================================================
echo Creating Dockerfile for "'${NAME}'"...
cat > "${thisdir}"/Dockerfile <<EOF
# Dockerfile for image '${NAME}'

# This is a catch-all image for learning purposes.

#=============================
# Generated by 'build.sh'
#
# DO NOT EDIT.
#=============================

FROM ${PARENT}
USER root
EOF

cat >> "${thisdir}"/Dockerfile <<'EOF'
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        autoconf \
        automake \
        file \
        gcc \
        g++ \
        libc6-dev \
        make \
    \
    && mkdir -p /tmp/geos \
    && curl -skL --retry 3 http://download.osgeo.org/geos/geos-3.6.1.tar.bz2 \
            | tar xj -C /tmp/geos \
    && (cd /tmp/geos/geos-3.6.1 && ./configure --prefix=/usr/local && make && make install && ldconfig) \
    \
    && mkdir -p /tmp/proj4 \
    && curl -skL --retry 3 http://download.osgeo.org/proj/proj-4.9.3.tar.gz \
            | tar xz -C /tmp/proj4 \
    && (cd /tmp/proj4/proj-4.9.3 && ./configure --prefix=/usr/local && make && make install && ldconfig) \
    \
    && apt-get purge -y --auto-remove \
        autoconf \
        automake \
        file \
        make \
    \
    && pip install --no-cache-dir --upgrade \
        'shapely==1.5.17' --no-binary shapely==1.5.17 \
    \
    && pip install --no-cache-dir --upgrade \
        'cython==0.25.2' \
    \
    && pip install --no-cache-dir --upgrade \
        'Cartopy==0.14.2' \
    && apt-get purge -y --auto-remove \
        gcc \
        g++ \
    && rm -rf /var/lib/apt/lists/* /tmp/*
EOF

echo
echo Building image "'${NAME}'"
echo
docker build -t "${NAME}" "${thisdir}"



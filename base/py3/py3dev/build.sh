set -o nounset
set -o pipefail

thisfile="${BASH_SOURCE[0]}"
thisdir="$( cd "$( dirname "${thisfile}" )" && pwd )"
parentdir="$(dirname "${thisdir}")"
parent_name=zppz/$(basename "${parentdir}")
parent_version=$(cat "${parentdir}"/version)
PARENT="${parent_name}:${parent_version}"

version=$(cat "${thisdir}"/version)
if [[ "${version}" < "${parent_version}" ]]; then
    echo "${parent_version}" > "${thisdir}"/version
    version=${parent_version}
fi
NAME=zppz/$(basename "${thisdir}"):"${version}"


echo
echo =====================================================
echo Creating Dockerfile for "'${NAME}'"
cat > "${thisdir}"/Dockerfile <<EOF
# Dockerfile for image '${NAME}'

#===========================
# Generated by 'build.sh'.
#
# DO NOT EDIT.
#===========================

FROM ${PARENT}
EOF

cat >> "${thisdir}/Dockerfile" <<'EOF'

USER root
WORKDIR /

# Generally useful packages
# 'numpy' takes 70M space.

RUN pip install --no-cache-dir --upgrade \
        'click==6.6' \
        'numpy==1.11.1' \
        'requests==2.11.0' \
        'sh==1.11' \
        'toolz==0.8.0'

# Testing, Debugging, code analysis, code formatting

RUN pip install --no-cache-dir --upgrade \
        'pudb==2016.2' \
        'pylint==1.6.4' \
        'pytest==2.9.2' \
        'pytest-cov==2.3.1' \
        'yapf==0.11.0' \
    && ln -s /usr/local/bin/py.test /usr/local/bin/pytest

# Documentation
# 'graphviz' and 'make' are to be used with Sphinx.
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        graphviz \
        make \
    && pip install --no-cache-dir --upgrade \
        'Sphinx==1.4.6' \
    && rm -rf /var/lib/apt/lists/* /tmp/* \
    && apt-get -y autoremove \
    && apt-get clean

# IPython, Jupyter Notebook
# notebook requires (and will install if not available) ipython, pyzmq, tornado, jinja2 and some other things.

RUN pip install --no-cache-dir --upgrade \
        'ipython==5.1.0' \
        'ipdb==0.10.1' \
    && apt-get update \
    && apt-get install -y --no-install-recommends \
        build-essential \
    && pip install --no-cache-dir --upgrade \
        'notebook==4.2.2' \
    && apt-get purge -y --auto-remove \
        build-essential \
    && rm -rf /var/lib/apt/lists/* /tmp/* \
    && apt-get -y autoremove \
    && apt-get clean

ENV NOTEBOOKPORT 8888
EXPOSE ${NOTEBOOKPORT}

COPY ipynb.sh /usr/local/bin/ipynb
RUN chmod +x /usr/local/bin/ipynb

# When launching Docker container, use option '-p 8888:8888'.

CMD ["python"]
EOF

echo
echo Building image "'${NAME}'"
echo
docker build -t "${NAME}" "${thisdir}"


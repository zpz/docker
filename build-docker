#!/usr/bin/bash


set -Eeuo pipefail

TINY=zppz/tiny:22.12.11
TAG=$(docker run --rm ${TINY} make-date-version)
NAMESPACE=zppz
THISDIR=$(cd $( dirname "${BASH_SOURCE[0]}") && pwd )

>&2 echo
>&2 echo "Build machine info: $(uname -a)"
>&2 echo "Build machine kernel: $(uname -s)"
BUILDARCH=$(uname -p)
>&2 echo "Build machine arch: ${BUILDARCH}"
if [[ ${BUILDARCH} == arm && $(uname -s) == Darwin ]]; then
    TARGETARCH=arm64
else
    TARGETARCH=amd64
fi
# To test build AMD images on an Apple ARM machine, just set
# `TARGETARCH` to 'amd64'.

if [[ ${BUILDARCH} == arm && ${TARGETARCH} == amd64 ]]; then
    # https://stackoverflow.com/a/58225906
    DOCKER_BUILDKIT=1
    # https://stackoverflow.com/a/64805337
    BUILDKIT_PROGRESS=plain
    buildopts="buildx build --platform linux/amd64"
elif [[ ${BUILDARCH} != arm && ${TARGETARCH} == arm64 ]]; then
    >&2 echo "building for target ${TARGETARCH} on an ${BUILDARCH} machine is not supported"
    exit 1
else
    buildopts="build"
fi


function build-image {
    name="$1"
    shift
    build_dir="$1"
    shift
    echo
    echo "building $name ..."
    echo
    docker ${buildopts} --no-cache -t "${name}" "${build_dir}" $@
    echo
}


function build-py3 {
    build-image ${NAMESPACE}/py3:${TAG} ${THISDIR}/py3
}


function build-py3-r {
    cmd="$(docker run --rm ${TINY} cat /tools/find-image)"
    parent=$(bash -c "${cmd}" -- zppz/py3)
    build-image ${NAMESPACE}/py3-r:${TAG} ${THISDIR}/py3-r --build-arg PARENT=${parent}
}


function build-py3-rust {
    cmd="$(docker run --rm ${TINY} cat /tools/find-image)"
    parent=$(bash -c "${cmd}" -- zppz/py3)
    build-image ${NAMESPACE}/py3-rust:${TAG} ${THISDIR}/py3-rust --build-arg PARENT=${parent}
}


function build-py3-build {
    cmd="$(docker run --rm ${TINY} cat /tools/find-image)"
    parent=$(bash -c "${cmd}" -- zppz/py3)
    build-image ${NAMESPACE}/py3-build:${TAG} ${THISDIR}/py3-build --build-arg PARENT=${parent}
}


if [[ $# == 0 ]]; then
    img=py3
elif [[ $# == 1 ]]; then
    img="$1"
else
    >&2 echo "too many arguments"
    exit 1
fi

if [ "${img}" = py3 ]; then
    build-py3
elif [ "${img}" = py3-r ]; then
    build-py3-r
elif [ "${img}" = py3-rust ]; then
    build-py3-rust
elif [ "${img}" = py3-build ]; then
    build-py3-build
else
    >&2 echo "unknown image name '${img}'"
    exit 1
fi


# Use `docker image push zppz/py3:xxxxxx` to push the image to Dockerhub.
